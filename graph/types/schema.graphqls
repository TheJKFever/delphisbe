schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

# The Query type represents all of the entry points into the API.
type Query {
  discussion(id: ID!): Discussion
  listDiscussions: [Discussion!]
  # Need to add verification that the caller is the user.
  user(id:ID!): User!
  me: User!
}

type Mutation {
  addDiscussionParticipant(discussionID: String!, userID: String!): Participant!
  addFlair(discussionID: ID!, flairID: String!): Participant!
  addPost(discussionID: ID!, postContent: String!): Post!
  createDiscussion(anonymityType: AnonymityType!, title: String!): Discussion!
  createFlair(displayName: String, imageURL: String, Source: String!): Flair!
  removeFlair(discussionID: ID!): Participant!
}

type Subscription {
  postAdded(discussionID: String!): Post
}
